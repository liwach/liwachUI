{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BottomNavigator = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bottomTabs = require(\"@react-navigation/bottom-tabs\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _icons = require(\"../utils/icons\");\n\nvar _colors = require(\"../utils/colors\");\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar _redux = require(\"redux\");\n\nvar _items = require(\"../reducers/items\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _DrawerNavigation = require(\"./DrawerNavigation\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Dessalegn\\\\Documents\\\\Delilah-Documents\\\\Final project\\\\React-native\\\\liwachUI\\\\src\\\\navigation\\\\BottomNavigator.js\";\n\nvar storeItem = (0, _redux.createStore)(_items.itemReducer);\nvar Tab = (0, _bottomTabs.createBottomTabNavigator)();\n\nvar BottomNavigator = function BottomNavigator() {\n  return _react.default.createElement(_reactRedux.Provider, {\n    store: storeItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    tabBarOptions: {\n      activeTintColor: _colors.colors.black,\n      style: {\n        borderTopWidth: 0,\n        backgroundColor: \"transparent\",\n        elevation: 0\n      }\n    },\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          var iconName;\n          var color = focused ? _colors.colors.black : _colors.colors.grey;\n\n          if (route.name === 'Home') {\n            iconName = 'home';\n          } else if (route.name === 'Add') {\n            iconName = 'plus';\n          } else if (route.name === 'Profile') {\n            iconName = 'idcard';\n          } else if (route.name === 'Message') {\n            iconName = 'mail';\n          }\n\n          return _react.default.createElement(_vectorIcons.AntDesign, {\n            name: iconName,\n            size: 23,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 16\n            }\n          });\n        }\n      };\n    },\n    barStyle: {\n      backgroundColor: _colors.colors.black,\n      height: 50,\n      justifyContent: 'center'\n    },\n    activeColor: _colors.colors.light_grey,\n    inactiveColor: _colors.colors.white,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: _DrawerNavigation.HomeStackScreen,\n    options: {\n      tabBarLabel: 'Home'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"Add\",\n    component: _DrawerNavigation.ProductStackScreen,\n    options: {\n      tabBarLabel: 'Add Item'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: _DrawerNavigation.ProfileStackScreen,\n    options: {\n      tabBarLabel: 'Profile'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"Message\",\n    component: _DrawerNavigation.MessageStackScreen,\n    options: {\n      tabBarLabel: 'Message'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  })));\n};\n\nexports.BottomNavigator = BottomNavigator;","map":{"version":3,"sources":["C:/Users/Dessalegn/Documents/Delilah-Documents/Final project/React-native/liwachUI/src/navigation/BottomNavigator.js"],"names":["storeItem","itemReducer","Tab","BottomNavigator","activeTintColor","colors","black","style","borderTopWidth","backgroundColor","elevation","route","tabBarIcon","focused","iconName","color","grey","name","height","justifyContent","light_grey","white","HomeStackScreen","tabBarLabel","ProductStackScreen","ProfileStackScreen","MessageStackScreen"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { createBottomTabNavigator, BottomTabBar } from '@react-navigation/bottom-tabs';\r\n\r\nimport {View,Image,TouchableOpacity} from 'react-native';\r\nimport {icons} from \"../utils/icons\";\r\nimport {colors} from \"../utils/colors\";\r\nimport { MaterialCommunityIcons, AntDesign } from '@expo/vector-icons';\r\nimport { createStore } from \"redux\";\r\nimport { itemReducer } from \"../reducers/items\";\r\nimport { Provider } from 'react-redux';\r\nimport { HomeStackScreen, MessageStackScreen, ProductStackScreen, ProfileStackScreen } from './DrawerNavigation';\r\n\r\nconst storeItem = createStore(itemReducer);\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport const BottomNavigator = ()=>{\r\n  return (\r\n    <Provider store={storeItem}>\r\n    <Tab.Navigator\r\n    initialRouteName=\"Home\"\r\n    tabBarOptions={{\r\n      activeTintColor: colors.black,\r\n      style:{\r\n        borderTopWidth: 0,\r\n        backgroundColor: \"transparent\",\r\n        elevation:0,\r\n      }\r\n    }}\r\n    screenOptions={({ route }) => ({\r\n      tabBarIcon: ({ focused }) => {\r\n        let iconName;\r\n        const color = focused ? colors.black : colors.grey;\r\n        if (route.name === 'Home') {\r\n          iconName = 'home';\r\n        } else if (route.name === 'Add') {\r\n          iconName = 'plus';\r\n        }\r\n        else if (route.name === 'Profile') {\r\n          iconName = 'idcard';\r\n        }\r\n        else if (route.name === 'Message') {\r\n          iconName = 'mail';\r\n        }   \r\n        return <AntDesign name={iconName} size={23} color={color} />;\r\n      },\r\n    })}\r\n\r\n    barStyle={{\r\n      backgroundColor: colors.black,\r\n      height: 50,\r\n      justifyContent: 'center',\r\n    }}\r\n    activeColor={colors.light_grey}\r\n    inactiveColor={colors.white}\r\n    >\r\n      <Tab.Screen \r\n      name=\"Home\" \r\n      component={HomeStackScreen}\r\n      \r\n      options={{\r\n        tabBarLabel: 'Home',\r\n      }}\r\n      />\r\n      <Tab.Screen \r\n      name=\"Add\" \r\n      component={ProductStackScreen}\r\n      options={{\r\n        tabBarLabel: 'Add Item',\r\n      }}\r\n      />\r\n      <Tab.Screen \r\n      name=\"Profile\" \r\n      component={ProfileStackScreen}\r\n      options={{\r\n        tabBarLabel: 'Profile',\r\n      }}\r\n      />\r\n      <Tab.Screen \r\n      name=\"Message\" \r\n      component={MessageStackScreen}\r\n      options={{\r\n        tabBarLabel: 'Message',\r\n      }}\r\n      />\r\n    </Tab.Navigator>\r\n    </Provider>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"script"}