{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addItem = exports.fetchitems = exports.ADD_ITEM = exports.ITEM_FAILURE = exports.ITEM_LOADING = exports.FETCH_ITEMS = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _config = require(\"../../utils/config\");\n\nvar FETCH_ITEMS = \"FETCH_ITEMS\";\nexports.FETCH_ITEMS = FETCH_ITEMS;\nvar ITEM_LOADING = \"ITEM_LOADING\";\nexports.ITEM_LOADING = ITEM_LOADING;\nvar ITEM_FAILURE = \"ITEM_FAILURE\";\nexports.ITEM_FAILURE = ITEM_FAILURE;\nvar ADD_ITEM = \"ADD_ITEM\";\nexports.ADD_ITEM = ADD_ITEM;\n\nvar fetchitems = function fetchitems() {\n  return function _callee(dispatch) {\n    var response, resData;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: ITEM_LOADING\n            });\n            _context.prev = 1;\n            response = fetch(_config.API_URL + \"/item\", {\n              method: \"GET\"\n            });\n\n            if (response.ok) {\n              _context.next = 6;\n              break;\n            }\n\n            dispatch({\n              type: ITEM_FAILURE\n            });\n            throw new Error(\"Something went wrong!, can't get the items\");\n\n          case 6:\n            _context.next = 8;\n            return _regenerator.default.awrap(response.json());\n\n          case 8:\n            resData = _context.sent;\n            dispatch({\n              type: FETCH_ITEMS,\n              items: resData.content\n            });\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            throw _context.t0;\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 12]], Promise);\n  };\n};\n\nexports.fetchitems = fetchitems;\n\nvar addItem = function addItem(picture, country, city, subcity, district, landmark, api, type_name) {\n  return function _callee2(dispatch, getState) {\n    var response, resData;\n    return _regenerator.default.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"I am in\");\n            dispatch({\n              type: ITEM_LOADING\n            });\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regenerator.default.awrap(fetch(_config.API_URL + \"/item\", {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              method: \"POST\",\n              body: JSON.stringify({\n                picture: picture,\n                address: {\n                  country: country,\n                  city: city,\n                  subcity: subcity,\n                  district: district,\n                  landmark: landmark,\n                  api: api\n                },\n                type_name: type_name\n              })\n            }));\n\n          case 5:\n            response = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 9;\n              break;\n            }\n\n            dispatch({\n              type: ITEM_FAILURE\n            });\n            throw new Error(\"Something went wrong!\");\n\n          case 9:\n            _context2.next = 11;\n            return _regenerator.default.awrap(response.json());\n\n          case 11:\n            resData = _context2.sent;\n            dispatch({\n              type: ADD_ITEM,\n              payload: resData.content\n            });\n            _context2.next = 18;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](2);\n            throw error;\n\n          case 18:\n            return _context2.abrupt(\"return\", dispatch);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 15]], Promise);\n  };\n};\n\nexports.addItem = addItem;","map":{"version":3,"sources":["C:/Users/Dessalegn/Documents/Delilah-Documents/Final project/React-native/liwachUI/src/reducers/items/itemActions.js"],"names":["FETCH_ITEMS","ITEM_LOADING","ITEM_FAILURE","ADD_ITEM","fetchitems","dispatch","type","response","fetch","API_URL","method","ok","Error","json","resData","items","content","addItem","picture","country","city","subcity","district","landmark","api","type_name","getState","console","log","headers","Accept","body","JSON","stringify","address","payload","error"],"mappings":"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","sourcesContent":["import { API_URL } from \"../../utils/config\";\r\n\r\nexport const FETCH_ITEMS = \"FETCH_ITEMS\";\r\nexport const ITEM_LOADING = \"ITEM_LOADING\";\r\nexport const ITEM_FAILURE = \"ITEM_FAILURE\";\r\nexport const ADD_ITEM = \"ADD_ITEM\";\r\nexport const fetchitems = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: ITEM_LOADING,\r\n    });\r\n    try {\r\n      const response = fetch(`${API_URL}/item`, {\r\n          method: \"GET\",\r\n        });\r\n\r\n      if (!response.ok) {\r\n        dispatch({\r\n          type: ITEM_FAILURE,\r\n        });\r\n        throw new Error(\"Something went wrong!, can't get the items\");\r\n      }\r\n      const resData = await response.json();\r\n      dispatch({\r\n        type: FETCH_ITEMS,\r\n        items: resData.content,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\n//Remember Delilah, this needs a token afterwards\r\nexport const addItem = (\r\n    picture,\r\n    country,\r\n    city,\r\n    subcity,\r\n    district,\r\n    landmark,\r\n    api,\r\n    type_name,\r\n  ) => async(dispatch, getState) => {\r\n    \r\n      console.log(\"I am in\")\r\n      dispatch({\r\n        type: ITEM_LOADING,\r\n      });\r\n      //const user = getState().auth.user; When I finish authentication\r\n      try {\r\n        const response = await (\r\n          fetch(`${API_URL}/item`, {\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              picture,\r\n              address: {\r\n                country: country,\r\n                city: city,\r\n                subcity: subcity,\r\n                district : district,\r\n                landmark : landmark,\r\n                api : api,\r\n              },\r\n              type_name : type_name,\r\n            }),\r\n          })\r\n        );\r\n        if (!response.ok) {\r\n          dispatch({\r\n            type: ITEM_FAILURE,\r\n          });\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n        const resData = await response.json();\r\n        dispatch({\r\n          type: ADD_ITEM,\r\n          payload:resData.content,\r\n        });\r\n      } catch (err) {\r\n        throw error;\r\n      }\r\n      return dispatch;\r\n    };\r\n  \r\n\r\n"]},"metadata":{},"sourceType":"script"}